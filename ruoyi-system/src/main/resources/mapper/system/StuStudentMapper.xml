<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.StuStudentMapper">

    <resultMap type="StuStudent" id="StuStudentResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="age"    column="age"    />
        <result property="sex"    column="sex"    />
    </resultMap>

    <sql id="selectStuStudentVo">
        select id, name, age, sex from t_student
    </sql>

    <select id="selectStuStudentList" parameterType="StuStudent" resultMap="StuStudentResult">
        <include refid="selectStuStudentVo"/>
        <where>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="age != null "> and age = #{age}</if>
            <if test="sex != null  and sex != ''"> and sex = #{sex}</if>
        </where>
    </select>

    <select id="selectStuStudentById" parameterType="Integer" resultMap="StuStudentResult">
        <include refid="selectStuStudentVo"/>
        where id = #{id}
    </select>

    <insert id="insertStuStudent" parameterType="StuStudent" useGeneratedKeys="true" keyProperty="id">
        insert into t_student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="age != null">age,</if>
            <if test="sex != null">sex,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="age != null">#{age},</if>
            <if test="sex != null">#{sex},</if>
        </trim>
    </insert>

    <update id="updateStuStudent" parameterType="StuStudent">
        update t_student
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="age != null">age = #{age},</if>
            <if test="sex != null">sex = #{sex},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteStuStudentById" parameterType="Integer">
        delete from t_student where id = #{id}
    </delete>

    <delete id="deleteStuStudentByIds" parameterType="String">
        delete from t_student where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>